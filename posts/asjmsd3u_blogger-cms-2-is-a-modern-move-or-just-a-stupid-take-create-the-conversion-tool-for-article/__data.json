{"type":"data","nodes":[null,null,{"type":"data","data":[{"content":1,"meta":637},{"id":2,"_sid":3,"title":4,"description":5,"snippet":6,"collectionId":7,"attributes":8,"workspace_id":24,"creator":14,"publish_date":28,"tags":29,"raw_tag_list":38,"styles":39,"serie":40,"contents":44,"reformedContents":45,"tableOfContents":610,"relatedChapters":623,"relatedPosts":629,"meta":630,"relatedArticles":631},"bafyreicixbezn3ul3iudrgjwnqokyetqfi4o36wa4z6bbfbt2oasjmsd3u","asjmsd3u","[Blogger CMS - 2] Is a modern move, or just a stupid take? create the conversion tool for article","","TD;DR\nspend some time on organizing mind and target, then spend less on remaking wheel\nIntro\ncurrently, i am creating a profile page for my career, and I need something a cool tool for my note taking, and article writing.\nAnd, so far I pick Anytype instead of Notion, free and self-host, self â€¦","bafyreib22r3vr6n4ezcpcvy5jxnddgsdhtp2szlnxe5bojmj4owc2ak24y",{"mentions":9,"lastOpenedDate":11,"syncError":12,"internalFlags":13,"lastModifiedBy":14,"createdDate":15,"type":16,"tag":17,"syncStatus":12,"67fd2398e212b5271c38aad2":20,"snippet":6,"sourceObject":22,"creator":14,"resolvedLayout":12,"links":23,"spaceId":24,"syncDate":25,"id":2,"layout":12,"lastModifiedDate":26,"name":4,"backlinks":27,"67ff5cd5e212b569d0ab04d2":28},[10],"bafyreiezotdp5ecgpjfy2zgvusjenpzpbm526pbwxl4zy3liznrtzseutm",1746032918,0,[],"_participant_bafyreih6w6dwqne2ezv2bnl5nhy4gkznv6lua6gggfuqwfornewzmehcye_3ga6qzvdro7cv_A7Cboak7P1aDoGUSzn5ExBZMmKF838NXRDdp2FFhkp4PqMzC",1745162896,"bafyreid4w3svm4sckp3tbj5mnbh5le2zrpzgssw2nogyflvjsruksdo6si",[18,19],"bafyreic2osor5ssxrebeqc5yc6n2cviekjmsb2hns4buiu5wjckv25nbyu","bafyreihubrjwpz5smcwkws2ny7mrwtkahfm5eb7skj3ogvszhl4tppsefm",[21],"bafyreid5trckdosfuaryp5oceq6whyyc6q7xh52uifz4l2pxq43jxn4nqe","bafyreihrf5uaizmvmkzatx62rgjimeg75lsfs7guon3ujkqtdidv4bcnb4",[10],"bafyreih6w6dwqne2ezv2bnl5nhy4gkznv6lua6gggfuqwfornewzmehcye.3ga6qzvdro7cv",1745386542,1745386539,[7],1745337600,[30,34],{"id":18,"_sid":31,"name":32,"url":33},"kv25nbyu","DevLog","/posts/tags/devlog_kv25nbyu",{"id":19,"_sid":35,"name":36,"url":37},"4tppsefm","HomeLab","/posts/tags/homelab_4tppsefm",[18,19],{},{"id":21,"name":41,"_sid":42,"url":43},"Blogger-CMS","3jxn4nqe","/posts/series/bloggercms_3jxn4nqe",{},[46,76,84,91,98,105,112,119,129,138,146,154,162,170,179,187,195,210,218,226,272,280,288,296,304,317,325,333,341,383,393,402,410,418,426,434,448,456,464,472,480,488,496,504,512,520,528,536,543,550,558,566,574,586,594,602],{"id":47,"order":48,"fields":49,"childrenIds":50,"style":70,"componentAttr":73,"componentType":75},"div-680533e4e212b50567ae0e35",1,{},[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"67fd1191e212b5271c38aa99","67fd11a8e212b5271c38aa9b","67ff5cace212b569d0ab04d1","67fd1242e212b5271c38aaa0","67fd24fee212b5271c38aad8","67fd122ae212b5271c38aa9e","67fd254de212b5271c38aade","68051365e212b50567ae0df0","67fd255de212b5271c38aadf","6805173ce212b50567ae0df1","68051797e212b50567ae0df2","68051c77e212b50567ae0df3","68051e71e212b50567ae0df4","68052287e212b50567ae0df6","680523b9e212b50567ae0df7","680523fce212b50567ae0df8","68052495e212b50567ae0df9","68052553e212b50567ae0dfd","6805299be212b50567ae0e02",{"backgroundColor":5,"align":71,"verticalAlign":72},"AlignLeft","VerticalAlignTop",{"style":74},"Div","Layout",{"id":51,"order":77,"fields":78,"childrenIds":79,"style":80,"componentAttr":81,"componentType":83},2,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"key":82},"creator","Relation",{"id":52,"order":85,"fields":86,"childrenIds":87,"style":88,"componentAttr":89,"componentType":83},3,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"key":90},"createdDate",{"id":53,"order":92,"fields":93,"childrenIds":94,"style":95,"componentAttr":96,"componentType":83},4,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"key":97},"67ff5cd5e212b569d0ab04d2",{"id":54,"order":99,"fields":100,"childrenIds":101,"style":102,"componentAttr":103,"componentType":83},5,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"key":104},"tag",{"id":55,"order":106,"fields":107,"childrenIds":108,"style":109,"componentAttr":110,"componentType":83},6,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"key":111},"67fd2398e212b5271c38aad2",{"id":56,"order":113,"fields":114,"childrenIds":115,"style":116,"componentAttr":117,"componentType":118},7,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{},"TableOfContents",{"id":57,"order":120,"fields":121,"childrenIds":122,"style":123,"componentAttr":124,"componentType":128},8,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":125,"style":126,"marks":127},"TD;DR","Header1",{},"Text",{"id":58,"order":130,"fields":131,"childrenIds":132,"style":133,"componentAttr":134,"componentType":128},9,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":135,"style":136,"marks":137}," spend some time on organizing mind and target, then spend less on remaking wheel","Quote",{},{"id":59,"order":139,"fields":140,"childrenIds":141,"style":142,"componentAttr":143,"componentType":128},10,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":144,"style":126,"marks":145},"Intro",{},{"id":60,"order":147,"fields":148,"childrenIds":149,"style":150,"componentAttr":151,"componentType":128},11,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":152,"marks":153},"currently, i am creating a profile page for my career, and I need something a cool tool for my note taking, and article writing.",{},{"id":61,"order":155,"fields":156,"childrenIds":157,"style":158,"componentAttr":159,"componentType":128},12,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":160,"marks":161},"And, so far I pick Anytype instead of Notion, free and self-host, self management for every data, while as a web developer, it still can have flexible area for reforming the data to be content editor; how lovely it is !",{},{"id":62,"order":163,"fields":164,"childrenIds":165,"style":166,"componentAttr":167,"componentType":128},13,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":168,"marks":169},"Then, I have been working around 1 week for blog layout (page render), and 1 week for tool building.",{},{"id":63,"order":171,"fields":172,"childrenIds":173,"style":174,"componentAttr":175,"componentType":128},14,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":176,"style":177,"marks":178},"A question take, or a wrong take?","Header2",{},{"id":64,"order":180,"fields":181,"childrenIds":182,"style":183,"componentAttr":184,"componentType":128},15,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":185,"marks":186},"at first, I was thinking about like, what if the exported file are crazy large (e.g. 100k line of sql record), and how heavy it take for a simple workspace.",{},{"id":65,"order":188,"fields":189,"childrenIds":190,"style":191,"componentAttr":192,"componentType":128},16,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":193,"marks":194},"So that, in that moment, I take Rust as the first choose for this act; since:",{},{"id":67,"order":196,"fields":197,"childrenIds":198,"style":199,"componentAttr":200,"componentType":128},18,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"style":201,"marks":202,"items":203},"Marked",{},[204,207],{"id":66,"text":205,"style":206},"I used to run a batch job to data conversion and data CRUD ",{"backgroundColor":5,"align":71,"verticalAlign":72},{"id":67,"text":208,"style":209},"I want to make some practices for Rust  ",{"backgroundColor":5,"align":71,"verticalAlign":72},{"id":68,"order":211,"fields":212,"childrenIds":213,"style":214,"componentAttr":215,"componentType":128},19,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":216,"marks":217},"similar options can be Golang, Typescript and Python, consider the type union (enum) and flexible, Golang can be stable but not flexible , Python and Typescript can be both flexible in typing but in concern of the memory usage, I was ignoring the sensity and kept rocking for Rust;",{},{"id":69,"order":219,"fields":220,"childrenIds":221,"style":222,"componentAttr":223,"componentType":128},20,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":224,"marks":225},"However, it became a problemic;",{},{"id":227,"order":228,"fields":229,"childrenIds":230,"style":270,"componentAttr":271,"componentType":75},"div-680533e4e212b50567ae0e36",21,{},[231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"68052a74e212b50567ae0e05","68052b31e212b50567ae0e06","68052b6be212b50567ae0e07","68052d07e212b50567ae0e08","68052dc6e212b50567ae0e0b","680525d5e212b50567ae0dfe","68052e5be212b50567ae0e0d","68052ebde212b50567ae0e11","68052ee7e212b50567ae0e12","68052f61e212b50567ae0e13","68052fece212b50567ae0e17","68053091e212b50567ae0e19","68053108e212b50567ae0e1e","68053262e212b50567ae0e23","68053287e212b50567ae0e27","680532c6e212b50567ae0e29","680532e9e212b50567ae0e2e","6805332be212b50567ae0e31","68053377e212b50567ae0e32","680533e6e212b50567ae0e37","680533ebe212b50567ae0e39","68053404e212b50567ae0e3a","68053436e212b50567ae0e3e","68053464e212b50567ae0e3f","68053492e212b50567ae0e40","680534f9e212b50567ae0e41","68053558e212b50567ae0e42","6805355ae212b50567ae0e43","6805355de212b50567ae0e45","68053585e212b50567ae0e49","68053595e212b50567ae0e50","68053596e212b50567ae0e54","680535a6e212b50567ae0e57","680535e9e212b50567ae0e58","680535f9e212b50567ae0e59","680537dfe212b50567ae0e5c","6805396de212b50567ae0e62","680536fce212b50567ae0e5a","68053717e212b50567ae0e5b",{"backgroundColor":5,"align":71,"verticalAlign":72},{"style":74},{"id":231,"order":273,"fields":274,"childrenIds":275,"style":276,"componentAttr":277,"componentType":128},22,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":278,"marks":279},"In first 2 days, I took those exported Json file to generate rust struct. at first, it sound smooth",{},{"id":232,"order":281,"fields":282,"childrenIds":283,"style":284,"componentAttr":285,"componentType":128},23,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":286,"marks":287},"until, I met the real content blocks;",{},{"id":233,"order":289,"fields":290,"childrenIds":291,"style":292,"componentAttr":293,"componentType":128},24,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":294,"marks":295},"yes, those blocks are flexible and the best feature for real end-user, but inside the data struct, nah, I seen much more type kind, and start being dum;",{},{"id":234,"order":297,"fields":298,"childrenIds":299,"style":300,"componentAttr":301,"componentType":128},25,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":302,"marks":303},"fornorly, I found an another breakthrough: the protobuffer file, in their official github",{},{"id":235,"order":305,"fields":306,"childrenIds":307,"style":308,"componentAttr":309,"componentType":316},26,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"url":310,"title":311,"description":312,"faviconHash":313,"type":314,"targetObjectId":10,"state":315},"https://github.com/anyproto/any-block","GitHub - anyproto/any-block: Protocol describing data structures used in Anytype software","Protocol describing data structures used in Anytype software - anyproto/any-block","bafyreifcdsusios3vgx2iuhg4xiyfxgnedoudep2c42jq3ef554wc25xwq","Page","Done","Bookmark",{"id":236,"order":318,"fields":319,"childrenIds":320,"style":321,"componentAttr":322,"componentType":128},27,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":323,"marks":324},"  I was glad that, I used to make service with gRPC service before, and made some Rust app with encode and decode protobuffer before.",{},{"id":237,"order":326,"fields":327,"childrenIds":328,"style":329,"componentAttr":330,"componentType":128},28,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":331,"marks":332},"Then, I took a one whole day for rewriting part of code, from JSON manual typed struct to prost generated struct.",{},{"id":238,"order":334,"fields":335,"childrenIds":336,"style":337,"componentAttr":338,"componentType":128},29,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":339,"marks":340},"but it also hit some issues for prost:",{},{"id":241,"order":342,"fields":343,"childrenIds":344,"style":345,"componentAttr":346,"componentType":128},32,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"style":201,"marks":347,"items":348},{},[349,364,380],{"id":239,"text":350,"style":351,"marks":352},"it can be prost::message , but hard to be fully implement with serde::Serialize and serde::Deserialize ",{"backgroundColor":5,"align":71,"verticalAlign":72},[353,356,360],{"range":354,"type":355},{"from":139,"to":289},"Keyboard",{"range":357,"type":355},{"from":358,"to":359},63,79,{"range":361,"type":355},{"from":362,"to":363},84,102,{"id":240,"text":365,"style":366,"marks":367},"prost's well-known-type, may consider to implement with half manually: generate the struct by the prost_build, but manually add the serde::Serialize and serde::Deserialize ;",{"backgroundColor":5,"align":71,"verticalAlign":72},[368,372,376],{"range":369,"type":355},{"from":370,"to":371},98,110,{"range":373,"type":355},{"from":374,"to":375},132,148,{"range":377,"type":355},{"from":378,"to":379},153,171,{"id":241,"text":381,"style":382},"and, even finetune the data-struct as single flexible field, may consider as changing serialize implement;",{"backgroundColor":5,"align":71,"verticalAlign":72},{"id":242,"order":384,"fields":385,"childrenIds":387,"style":388,"componentAttr":389,"componentType":128},33,{"lang":386},"rust",[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":390,"style":391,"marks":392},"/// orginial code generate from prost \n#[derive(Clone, PartialEq, ::prost::Message)]\npub struct Struct {\n    /// Unordered map of dynamically typed values.\n    #[prost(map = \"string, message\", tag = \"1\")]\n    pub fields: ::std::collections::HashMap\u003C::prost::alloc::string::String, Value>,\n}\n\n","Code",{},{"id":243,"order":394,"fields":395,"childrenIds":397,"style":398,"componentAttr":399,"componentType":128},34,{"lang":396},"json",[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":400,"style":391,"marks":401},"// what it outcome\n{\n\t\"fields\" : {\n\t\t\"field_a\" : {\n\t\t\t// inside the `Value` struct \n\t\t\t\"kind\" : \"string_value\"\n\t\t},\n\t\t\"field_b\" : {\n\t\t\t// inside the `Value` struct \n\t\t\t\"kind\" : 42.0\n\t\t}\n\t}\n}\n",{},{"id":244,"order":403,"fields":404,"childrenIds":405,"style":406,"componentAttr":407,"componentType":128},35,{"lang":396},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":408,"style":391,"marks":409},"// what i want to outout\n{\n\t\"fields\" : {\n\t\t\"field_a\" :  \"string_value\",\n\t\t\"field_b\" :  42.0,\n\t}\n}\n",{},{"id":245,"order":411,"fields":412,"childrenIds":413,"style":414,"componentAttr":415,"componentType":128},36,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":416,"marks":417},"of course, I can make the serde implement; just like :\n",{},{"id":246,"order":419,"fields":420,"childrenIds":421,"style":422,"componentAttr":423,"componentType":128},37,{"lang":386},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":424,"style":391,"marks":425},"\nimpl serde::Serialize for Value {\n    fn serialize\u003CS>(&self, serializer: S) -> Result\u003CS::Ok, S::Error>\n    where\n        S: serde::Serializer,\n    {\n        match self.kind.as_ref() {\n            None => serializer.serialize_none(),\n            Some(value::Kind::NullValue(_)) => serializer.serialize_unit(),\n            Some(value::Kind::NumberValue(value)) => serializer.serialize_f64(*value),\n            Some(value::Kind::StringValue(value)) => serializer.serialize_str(&value),\n            Some(value::Kind::BoolValue(value)) => serializer.serialize_bool(*value),\n            Some(value::Kind::StructValue(value)) => {\n                let mut map = serializer.serialize_map(Some(value.fields.len()))?;\n                for (key, value) in value.fields.iter() {\n                    map.serialize_entry(key, value)?;\n                }\n                map.end()\n            }\n            Some(value::Kind::ListValue(value)) => {\n                let mut seq = serializer.serialize_seq(Some(value.values.len()))?;\n                for e in value.values.iter() {\n                    seq.serialize_element(e)?;\n                }\n                seq.end()\n            }\n            _ => serializer.serialize_none(),\n        }\n    }\n}\n",{},{"id":247,"order":427,"fields":428,"childrenIds":429,"style":430,"componentAttr":431,"componentType":128},38,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":432,"marks":433},"but consider what i facing in near future, ",{},{"id":249,"order":435,"fields":436,"childrenIds":437,"style":438,"componentAttr":439,"componentType":128},40,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"style":201,"marks":440,"items":441},{},[442,445],{"id":248,"text":443,"style":444}," how to implement the interfaces and enum, when it won't loosing the data information for enough render information;",{"backgroundColor":5,"align":71,"verticalAlign":72},{"id":249,"text":446,"style":447},"how to convert the Rust interface back to Typescript interface;",{"backgroundColor":5,"align":71,"verticalAlign":72},{"id":250,"order":449,"fields":450,"childrenIds":451,"style":452,"componentAttr":453,"componentType":128},41,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":454,"marks":455},"â€¦",{},{"id":251,"order":457,"fields":458,"childrenIds":459,"style":460,"componentAttr":461,"componentType":128},42,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":462,"marks":463},"guys, did you realize something? ",{},{"id":252,"order":465,"fields":466,"childrenIds":467,"style":468,"componentAttr":469,"componentType":128},43,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":470,"marks":471},"Anytype, as a software development company, as a product development company, ",{},{"id":253,"order":473,"fields":474,"childrenIds":475,"style":476,"componentAttr":477,"componentType":128},44,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":478,"marks":479},"using Electron JS and Typescript for cross-platform Application",{},{"id":254,"order":481,"fields":482,"childrenIds":483,"style":484,"componentAttr":485,"componentType":128},45,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":486,"marks":487},"having Golang service and protobuff for backend service and data syncing.",{},{"id":255,"order":489,"fields":490,"childrenIds":491,"style":492,"componentAttr":493,"componentType":128},46,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":494,"marks":495},"Any Block for content writing, are All Component they made, and they are allow to mount those data and property.",{},{"id":256,"order":497,"fields":498,"childrenIds":499,"style":500,"componentAttr":501,"componentType":128},47,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":502,"marks":503},"All fields and one-of message are not unnecessary data, and all fields are not wasted;",{},{"id":257,"order":505,"fields":506,"childrenIds":507,"style":508,"componentAttr":509,"componentType":128},48,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":510,"marks":511},".",{},{"id":258,"order":513,"fields":514,"childrenIds":515,"style":516,"componentAttr":517,"componentType":128},49,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":518,"marks":519},"and ",{},{"id":259,"order":521,"fields":522,"childrenIds":523,"style":524,"componentAttr":525,"componentType":128},50,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":526,"marks":527},"they all should be built from typescript and proto-buffer. ",{},{"id":260,"order":529,"fields":530,"childrenIds":531,"style":532,"componentAttr":533,"componentType":128},51,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":534,"marks":535},"they all should be built from typescript and proto-buffer.",{},{"id":261,"order":537,"fields":538,"childrenIds":539,"style":540,"componentAttr":541,"componentType":128},52,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":534,"marks":542},{},{"id":262,"order":544,"fields":545,"childrenIds":546,"style":547,"componentAttr":548,"componentType":128},53,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":510,"marks":549},{},{"id":263,"order":551,"fields":552,"childrenIds":553,"style":554,"componentAttr":555,"componentType":128},54,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":556,"marks":557},"and yes, what I end up is using Javascript and Typescript as part of frontend development tool.",{},{"id":264,"order":559,"fields":560,"childrenIds":561,"style":562,"componentAttr":563,"componentType":128},55,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":564,"marks":565},"what it end up is, Typescript.",{},{"id":265,"order":567,"fields":568,"childrenIds":569,"style":570,"componentAttr":571,"componentType":128},56,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":572,"marks":573},"so, after I handout with my friends a afternoon, I sit in front of my laptop around 4 hours, from searching with google to protoc generating the typescript interface, rewrite the code manually. And it all done the conversion tool, and have an extra result for type defined for component render in later use.",{},{"id":266,"order":575,"fields":576,"childrenIds":577,"style":578,"componentAttr":579,"componentType":128},57,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":580,"marks":581},"even, the code generated from ts-proto , is more easy understanding, as frontend. ",{"marks":582},[583],{"range":584,"type":355},{"from":585,"to":427},30,{"id":267,"order":587,"fields":588,"childrenIds":589,"style":590,"componentAttr":591,"componentType":128},58,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":592,"marks":593},"I mean, yeah, why it can so complex for one-of and type-union ?\n",{},{"id":268,"order":595,"fields":596,"childrenIds":597,"style":598,"componentAttr":599,"componentType":128},59,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":600,"style":126,"marks":601},"what the story going to tell:",{},{"id":269,"order":603,"fields":604,"childrenIds":605,"style":606,"componentAttr":607,"componentType":128},60,{},[],{"backgroundColor":5,"align":71,"verticalAlign":72},{"text":608,"marks":609},"AI can be fast making anything, but it won't fix human mind error; don't rush for anything, take some time for reflashing the brain.  ",{},[611,614,617,620],{"id":612,"componentId":57,"title":125,"url":613,"level":48},"tddr_38aade","#tddr_38aade",{"id":615,"componentId":59,"title":144,"url":616,"level":48},"intro_38aadf","#intro_38aadf",{"id":618,"componentId":63,"title":176,"url":619,"level":77},"a_question_take_or_a_wrong_take_ae0df4","#a_question_take_or_a_wrong_take_ae0df4",{"id":621,"componentId":268,"title":600,"url":622,"level":48},"what_the_story_going_to_tell_ae0e5a","#what_the_story_going_to_tell_ae0e5a",[624],{"id":625,"_sid":626,"componentId":625,"title":627,"url":628},"bafyreidelo425pku6f4e3wtwk63x6jaciucl77xc2iybswqobvq4tz6kdy","q4tz6kdy","[Blogger CMS - 3] is it a time for implement Jupyter Notebook? ","/posts/q4tz6kdy_blogger-cms-3-is-it-a-time-for-implement-jupyter-notebook",[],{},[632,633],{"id":625,"componentId":625,"title":627,"url":628},{"id":634,"componentId":634,"title":635,"url":636},"bafyreiaaezcucbcokt5vw4k4lp6qsf6r6hkqufx4hha27x5z4g5k5ggpfa","[Linux Log] After CentOs, What we can pick? ","/posts/5k5ggpfa_linux-log-after-centos-what-we-can-pick",{"title":4,"titleTemplate":638,"robots":639,"description":6,"canonical":640,"additionalLinkTags":641,"twitter":645,"openGraph":651,"additionalMetaTags":658},"%s | Steven Dev's Portfolio","index, follow","https://stvchm9703.github.io",[642],{"rel":643,"href":644},"icon","/favicon.svg",{"cardType":646,"site":647,"creator":648,"title":649,"description":649,"image":-1,"imageAlt":650},"summary_large_image","@steven9703_github_io","@hassan_ao_ddid","Steven Dev's Portfolio","cover image, [Blogger CMS - 2] Is a modern move, or just a stupid take? create the conversion tool for article, Steven Dev's",{"type":652,"title":4,"url":640,"description":6,"siteName":649,"images":653,"article":654,"videos":-1,"audio":-1},"article",[],{"publishedTime":655,"authors":656,"tags":657},"2025-04-22T16:00:00.000Z",[640],[41,32,36],[659],{"name":660,"content":661},"keywords","Blogger-CMS, DevLog, HomeLab, Developer, Software Engineer"],"uses":{"params":["post_id"]}}]}
